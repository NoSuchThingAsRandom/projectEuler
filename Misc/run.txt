import java.math.BigInteger;
import java.util.BitSet;
import java.io.*;


public class run {
	
	public static void main(String[] args) {
		System.out.println(generateTriangle(5));
		
		int x=0;
		int current=0;
		while(current<500){
			
			current=numDivisor(generateTriangle(x));
			System.out.println(x + " has " + current + " divisors");
			if(current>500){
				System.out.println("FOUND "+generateTriangle(x));
				break;
			}
			x++;
		}
		System.out.println(x);
	}
	
	public static int generateTriangle(int number){
		int triangle=0;
		for(int x=1;x<=number; x++){
			triangle=triangle+x;
		}
		return triangle;
	}
	public static int numDivisor(int number){
		int count=0;
		for(int x=1; x<(Math.sqrt(number));x++){
			if(number%x==0){
				count++;
			}
		}
		count=count+2;
		
		
		return count;
	}
	
	public static void checkPrime(int goTo){
		BitSet bs =new BitSet(goTo);
		bs.set(0, goTo,true);
		for(int x=2;x<Math.sqrt(goTo); x++){
			//System.out.println("Xn"+x);
			if(bs.get(x)==true){
				//System.out.println("X"+x);
				for(int y=2;y*x<=goTo;y++){
					//System.out.println("y="+y+"y*x="+y*x);
					bs.set((y*x), false);
				}
			}
		}
		System.out.println("DONE");
		long sum=2;
		//System.out.println(bs.get(4));
		for(int z=3;z<goTo;z++){
			if(bs.get(z)==true){
				//System.out.println(bs.get(z)+" "+(z));
				sum=sum+z;
			}
		}
		System.out.println(sum);
		//bs.set(2, false);
	}
}
